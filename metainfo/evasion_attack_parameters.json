{
 "EmptyEvasionAttacker": {
 }, 
 "FGSM": {
  "epsilon": ["epsilon", "float", 0.1, {"min": 0.0001, "step": 0.01}, "?"]
 },
 "NettackEvasionAttacker": {
  "node_idx": ["node_idx", "int", 0, {"min":  0, "step": 1}, "Index of the node to attack"],
  "n_perturbations": ["n_perturbations", "int", null, {"min":  0, "step": 1}, "Number of perturbations. If None, then n_perturbations = degree(node_idx)"],
  "perturb_features": ["perturb_features", "bool", true, {}, "Indicates whether the features can be changed"],
  "perturb_structure": ["perturb_structure", "bool", true, {}, "Indicates whether the structure can be changed"],
  "direct": ["direct", "bool", true, {}, "Indicates whether to directly modify edges/features of the node attacked or only those of influencers"],
  "n_influencers": ["n_influencers", "int", 0, {"min":  0, "step": 1}, "Number of influencing nodes. Will be ignored if direct is True"]
 },
 "NettackGroupEvasionAttacker": {

  "n_perturbations": ["n_perturbations", "int", null, {"min":  0, "step": 1}, "Number of perturbations. If None, then n_perturbations = degree(node_idx)"],
  "perturb_features": ["perturb_features", "bool", true, {}, "Indicates whether the features can be changed"],
  "perturb_structure": ["perturb_structure", "bool", true, {}, "Indicates whether the structure can be changed"],
  "direct": ["direct", "bool", true, {}, "Indicates whether to directly modify edges/features of the node attacked or only those of influencers"],
  "n_influencers": ["n_influencers", "int", 0, {"min":  0, "step": 1}, "Number of influencing nodes. Will be ignored if direct is True"]
 },
 "QAttack": {
  "population_size": ["Population size", "int", 50, {"min":  1, "step":  1}, "Number of genes in population"],
  "individual_size": ["Individual size", "int", 30, {"min": 1, "step":  1}, "Number of rewiring operations within one gene"],
  "generations" : ["Generations", "int", 50, {"min": 0, "step": 1}, "Number of generations for genetic algorithm"],
  "prob_cross": ["Probability for crossover", "float", 0.5, {"min": 0, "max": 1, "step": 0.01}, "Probability of crossover between two genes"],
  "prob_mutate": ["Probability for mutation", "float", 0.02, {"min": 0, "max": 1, "step": 0.01}, "Probability of gene mutation"]
 },
  "PGD": {
  "epsilon": ["Epsilon", "float", 0.1, {"min": 0, "max": 1, "step": 0.01}, "Epsilon"],
  "learning_rate": ["Learning rate", "float", 0.01, {}, "Learning rate for adjacency matrix optimization"],
  "num_iterations": ["Number of iterations", "int", 100, {"min":  1, "step": 1}, "Number of iterations of gradient descent"],
  "num_rand_trials": ["Number of random trials", "int", 100, {"min":  1, "step": 1}, "number of random trials in Random Sampling Algorithm"]
 }
}

